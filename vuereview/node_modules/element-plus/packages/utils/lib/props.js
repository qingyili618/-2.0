"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.componentSize = exports.mutable = exports.keyOf = exports.definePropType = exports.buildProp = void 0;
const error_1 = require("./error");
const wrapperKey = Symbol();
/**
 * @description Build prop. It can better optimize prop types
 * @description 生成 prop，能更好地优化类型
 * @example
  // limited options
  // the type will be PropType<'light' | 'dark'>
  buildProp({
    type: String,
    values: ['light', 'dark'],
  } as const)
  * @example
  // limited options and other types
  // the type will be PropType<'small' | 'medium' | number>
  buildProp({
    type: [String, Number],
    values: ['small', 'medium'],
    validator: (val: unknown): val is number => typeof val === 'number',
  } as const)
  @link see more: https://github.com/element-plus/element-plus/pull/3341
 */
function buildProp({ values, required, default: defaultValue, type, validator, } = {}) {
    var _a;
    const _validator = values || validator
        ? (val) => {
            let valid = false;
            let allowedValues = [];
            if (values) {
                allowedValues = [...values, defaultValue];
                valid || (valid = allowedValues.includes(val));
            }
            if (validator)
                valid || (valid = validator(val));
            if (!valid && allowedValues.length > 0) {
                (0, error_1.debugWarn)(`Vue warn`, `Invalid prop: Expected one of (${allowedValues.join(', ')}), got value ${val}`);
            }
            return valid;
        }
        : undefined;
    return {
        type: ((_a = type) === null || _a === void 0 ? void 0 : _a[wrapperKey]) || type,
        required: !!required,
        default: defaultValue,
        validator: _validator,
    };
}
exports.buildProp = buildProp;
const definePropType = (val) => ({ [wrapperKey]: val });
exports.definePropType = definePropType;
const keyOf = (arr) => Object.keys(arr);
exports.keyOf = keyOf;
const mutable = (val) => val;
exports.mutable = mutable;
exports.componentSize = ['large', 'medium', 'small', 'mini'];
