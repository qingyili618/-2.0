"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useSameTarget = void 0;
const shared_1 = require("@vue/shared");
const useSameTarget = (handleClick) => {
    if (!handleClick) {
        return { onClick: shared_1.NOOP, onMousedown: shared_1.NOOP, onMouseup: shared_1.NOOP };
    }
    let mousedownTarget = false;
    let mouseupTarget = false;
    // refer to this https://javascript.info/mouse-events-basics
    // events fired in the order: mousedown -> mouseup -> click
    // we need to set the mousedown handle to false after click fired.
    const onClick = (e) => {
        // if and only if
        if (mousedownTarget && mouseupTarget) {
            handleClick(e);
        }
        mousedownTarget = mouseupTarget = false;
    };
    const onMousedown = (e) => {
        // marking current mousedown target.
        mousedownTarget = e.target === e.currentTarget;
    };
    const onMouseup = (e) => {
        // marking current mouseup target.
        mouseupTarget = e.target === e.currentTarget;
    };
    return { onClick, onMousedown, onMouseup };
};
exports.useSameTarget = useSameTarget;
