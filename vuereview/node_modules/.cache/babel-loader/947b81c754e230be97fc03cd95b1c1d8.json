{"remainingRequest":"D:\\qq文件\\合并2.0\\vuereview\\node_modules\\babel-loader\\lib\\index.js!D:\\qq文件\\合并2.0\\vuereview\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\qq文件\\合并2.0\\vuereview\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\qq文件\\合并2.0\\vuereview\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\qq文件\\合并2.0\\vuereview\\src\\components\\Identify.vue?vue&type=template&id=08ba293c","dependencies":[{"path":"D:\\qq文件\\合并2.0\\vuereview\\src\\components\\Identify.vue","mtime":1640050693569},{"path":"D:\\qq文件\\合并2.0\\vuereview\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\qq文件\\合并2.0\\vuereview\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\qq文件\\合并2.0\\vuereview\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"D:\\qq文件\\合并2.0\\vuereview\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\qq文件\\合并2.0\\vuereview\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jayB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAicy1jYW52YXMiCn07CnZhciBfaG9pc3RlZF8yID0gWyJ3aWR0aCIsICJoZWlnaHQiXTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiY2FudmFzIiwgewogICAgaWQ6ICJzLWNhbnZhcyIsCiAgICB3aWR0aDogJHByb3BzLmNvbnRlbnRXaWR0aCwKICAgIGhlaWdodDogJHByb3BzLmNvbnRlbnRIZWlnaHQKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIF9ob2lzdGVkXzIpXSk7Cn0="},{"version":3,"sources":["D:\\qq文件\\合并2.0\\vuereview\\src\\components\\Identify.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;;uBAAX,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADJ,mBAAA,CAA6E,QAA7E,EAA6E;AAArE,IAAA,EAAE,EAAC,UAAkE;AAAtD,IAAA,KAAK,EAAE,MAAA,CAAA,YAA+C;AAAhC,IAAA,MAAM,EAAE,MAAA,CAAA;AAAwB,GAA7E,E,IAAA,E;;AAAA,I,UAAA,CACI,CAFN,C","sourcesContent":["<template>\r\n  <div class=\"s-canvas\">\r\n    <canvas id=\"s-canvas\" :width=\"contentWidth\" :height=\"contentHeight\"></canvas>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default{\r\n  name: 'Identify',\r\n  props: {\r\n    identifyCode: { // 默认注册码\r\n      type: String,\r\n      default: '1234'\r\n    },\r\n    fontSizeMin: { // 字体最小值\r\n      type: Number,\r\n      default: 25\r\n    },\r\n    fontSizeMax: { // 字体最大值\r\n      type: Number,\r\n      default: 35\r\n    },\r\n    backgroundColorMin: { // 验证码图片背景色最小值\r\n      type: Number,\r\n      default: 200\r\n    },\r\n    backgroundColorMax: { // 验证码图片背景色最大值\r\n      type: Number,\r\n      default: 220\r\n    },\r\n    dotColorMin: { // 背景干扰点最小值\r\n      type: Number,\r\n      default: 60\r\n    },\r\n    dotColorMax: { // 背景干扰点最大值\r\n      type: Number,\r\n      default: 120\r\n    },\r\n    contentWidth: { // 容器宽度\r\n      type: Number,\r\n      default: 90\r\n    },\r\n    contentHeight: { // 容器高度\r\n      type: Number,\r\n      default: 38\r\n    }\r\n  },\r\n  methods: {\r\n    // 生成一个随机数\r\n    randomNum (min, max) {\r\n      return Math.floor(Math.random() * (max - min) + min)\r\n    },\r\n\r\n    // 生成一个随机的颜色\r\n    randomColor (min, max) {\r\n      let r = this.randomNum(min, max)\r\n      let g = this.randomNum(min, max)\r\n      let b = this.randomNum(min, max)\r\n      return 'rgb(' + r + ',' + g + ',' + b + ')'\r\n    },\r\n\r\n    drawPic () {\r\n      let canvas = document.getElementById('s-canvas')\r\n      let ctx = canvas.getContext('2d')\r\n      ctx.textBaseline = 'bottom'\r\n      // 绘制背景\r\n      ctx.fillStyle = '#e6ecfd'\r\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\r\n      // 绘制文字\r\n      for (let i = 0; i < this.identifyCode.length; i++) {\r\n        this.drawText(ctx, this.identifyCode[i], i)\r\n      }\r\n      this.drawLine(ctx)\r\n      this.drawDot(ctx)\r\n    },\r\n\r\n    drawText (ctx, txt, i) {\r\n      ctx.fillStyle = this.randomColor(50, 160) // 随机生成字体颜色\r\n      ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + 'px SimHei' // 随机生成字体大小\r\n      let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1))\r\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\r\n      var deg = this.randomNum(-30, 30)\r\n      // 修改坐标原点和旋转角度\r\n      ctx.translate(x, y)\r\n      ctx.rotate(deg * Math.PI / 180)\r\n      ctx.fillText(txt, 0, 0)\r\n      // 恢复坐标原点和旋转角度\r\n      ctx.rotate(-deg * Math.PI / 180)\r\n      ctx.translate(-x, -y)\r\n    },\r\n\r\n    drawLine (ctx) {\r\n      // 绘制干扰线\r\n      for (let i = 0; i < 4; i++) {\r\n        ctx.strokeStyle = this.randomColor(100, 200)\r\n        ctx.beginPath()\r\n        ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n        ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n        ctx.stroke()\r\n      }\r\n    },\r\n\r\n    drawDot (ctx) {\r\n      // 绘制干扰点\r\n      for (let i = 0; i < 30; i++) {\r\n        ctx.fillStyle = this.randomColor(0, 255)\r\n        ctx.beginPath()\r\n        ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\r\n        ctx.fill()\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    identifyCode () {\r\n      this.drawPic()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.drawPic()\r\n  }\r\n}\r\n</script>"],"sourceRoot":""}]}